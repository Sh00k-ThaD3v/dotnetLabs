@page "/Videos" 
@inject ILanguageContainerService language 
@inject NavigationManager navigationManager 
@inject HttpClient httpClient 
 
<h3>@language["Videos:Title"]</h3>

@if(isBusy)
{
    <BFUSpinner Size="SpinnerSize.Large" /> 
}

<div class="ms-Grid" dir="ltr">
    <div class="ms-Grid-row">
        @if (videos != null)
        {
            @foreach (var video in videos)
            {
                <div class="ms-Grid-col ms-sm12 ms-md6 ms-lg3">
                    <VideoTicket Video="@video" OnTicketClicked="OnVideoClicked"/>
                </div>
            }

        }
    </div>
    <div class="ms-Grid-row">
        <div class="ms-Grid-col ms-sm4 ms-smPush4">
            @if(isMoreVideosAvailable)
            {
                <BFUButtonBase Text="Load More" @onclick="LoadMoreVideosAsync" />
            }
            else if(!isBusy)
            {
                <p>All videos retrieved</p>
            }
        </div>
    </div>
</div>

<!-- Pagination -->

@code {

    private bool isBusy = false;
    private List<VideoDetail> videos = null;
    private int currentPageNumber = 1;
    private int totalPagesCount = 1;
    private bool isMoreVideosAvailable = false;

    protected override async Task OnInitializedAsync()
    {
        videos = (await FetchVideosAsync()).ToList();
    }


    private async Task LoadMoreVideosAsync()
    {
        currentPageNumber++;
        var result = await FetchVideosAsync();
        if (result != null)
            videos.AddRange(result);
    }

    private async Task<IEnumerable<VideoDetail>> FetchVideosAsync()
    {
        isBusy = true;
        try
        {
            var response = await httpClient.GetFromJsonAsync<CollectionResponse<VideoDetail>>($"/api/videos/getall?pageNumber={currentPageNumber}&pageSize=12");
            if (response.IsSuccess)
            {
                currentPageNumber = response.PageNumber.Value;
                totalPagesCount = response.PagesCount.Value;
                if ((currentPageNumber + 1) <= totalPagesCount)
                    isMoreVideosAvailable = true;
                else
                    isMoreVideosAvailable = false;
                isBusy = false;
                return response.Records;
            }
            else
            {
                // TODO: Show an error message 
                return null;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);

        }
        isBusy = false;
        return null;
    }

    private void OnVideoClicked(VideoDetail video)
    {
        navigationManager.NavigateTo($"/videos/details/{video.Id}");
    }
}
